{
	"42_new_header_file": {
	"prefix": ["new_header_file", "nhf"],
	"body": [
		"#ifndef ${TM_FILENAME/(^|[-.])([^-.]+)/${1:+_}${2:/upcase}/g}",
		"# define ${TM_FILENAME/(^|[-.])([^-.]+)/${1:+_}${2:/upcase}/g}",
		"$1",
		"",
		"#endif",
		"",
	],
	"description": "Creates the boiler-plate \"ifndef define endif\" needed for a header file"
	},
	"Orthodox Canonical Class form": {
		"prefix": ["hoccf", "hclass", "hcanonical"],
		"body": [
			"#include <iostream>",
			"class ${TM_FILENAME_BASE}{",
			"private:",
			"\t",
			"public:",
			"\t${TM_FILENAME_BASE}();",
			"\t${TM_FILENAME_BASE}(const ${TM_FILENAME_BASE} &${TM_FILENAME_BASE/(.*)/${1:/downcase}/});",
			"\t~${TM_FILENAME_BASE}();",
			"\t${TM_FILENAME_BASE} &operator=(const ${TM_FILENAME_BASE} &${TM_FILENAME_BASE/(.*)/${1:/downcase}/});",
			"};",
		],
		"description": "All mandatory functions for Orthodox Canonical Class form",
	},
}