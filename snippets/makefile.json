{
	"base_makefile": {
		"prefix": ["splmake", "make", "basemakefile"],
		"body": [
			"CXX := c++",
			"CXXFLAGS := -Wall -Wextra -Werror -std=c++98 -Iinc",
			"NAME := $1",
			"SRCS := $2",
			"INC := $3",
			"OBJS := $(SRCS:.cpp=.o)",
			"SRCS := $(addprefix srcs/, $(SRCS))",
			"OBJS := $(addprefix bin/, $(OBJS))",
			"INC := $(addprefix inc/, $(INC))",
			"all: $(NAME) | bin",
			"bin:",
			"\tmkdir bin",
			"$(NAME): $(OBJS)",
			"\t$(CXX) $(CXXFLAGS) $^ -o $@",
			"$(OBJS): $(SRCS) $(INC) Makefile",
			"bin/%.o: srcs/%.cpp",
			"\t$(CXX) $(CXXFLAGS) $< -c -o $@",
			"clean:",
			"\t$(RM) bin/*.o",
			"fclean: clean",
			"\t$(RM) $(NAME)",
			"re: fclean all",
			"",
			".PHONY: all clean fclean re",
		],
		"description": "Creates a base Makefile and prompts for Srcs files and dependencies"
	},
	"mid_file": {
		"prefix": ["mid_file"],
		"body": [
				"${1:file} \\",
				"$2",
		],
		"description": "Prompts for file and goes to line below to continue"
	},
	"Dependencies_hpp": {
		"prefix": ["deps", "dependencies", "header files", "hpp files", "h files", "inc", "include"],
		"body": [
			"${CLIPBOARD/(SRCS)|(.c)/${1:+INC}${2:+.h}/g}",
		],
		"description": "Whatever we have in clipboard is pasted but ending in .hpp"
	},
	"valgrind": {
		"prefix": ["vg", "valgrind", "valg"],
		"body": [
			"valgrind: vbuild vrun",
			"",
			"vbuild: | Dockerfile",
			"\tdocker build --tag valgrind-image .",
			"Dockerfile:",
			"\t@echo \"FROM ubuntu:latest\\n\\nRUN apt-get update\\nRUN apt-get upgrade -y\\nRUN apt-get install make clang gcc valgrind -y\\n\\nWORKDIR /valgrind\" > Dockerfile",
			"vrun:",
			"\tdocker run --tty --interactive --rm --volume `pwd`:/valgrind/ --name valgrind valgrind-image",
			"vcheck:",
			"\tdocker container ls -a",
			"\tdocker images",
			"\tdocker volume ls",
			"vclean:",
			"\tdocker system prune -a",
		],
		"description": "Creates a base Makefile and prompts for Srcs files and dependencies"
	},
}
